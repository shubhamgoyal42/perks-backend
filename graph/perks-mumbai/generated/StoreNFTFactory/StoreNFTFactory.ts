// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class StoreNFTCreated extends ethereum.Event {
  get params(): StoreNFTCreated__Params {
    return new StoreNFTCreated__Params(this);
  }
}

export class StoreNFTCreated__Params {
  _event: StoreNFTCreated;

  constructor(event: StoreNFTCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get storeNFT(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class StoreNFTFactory extends ethereum.SmartContract {
  static bind(address: Address): StoreNFTFactory {
    return new StoreNFTFactory("StoreNFTFactory", address);
  }

  createStoreNFT(
    _name: string,
    _owner: Address,
    _perksVault: Address,
    _baseURI: string
  ): Address {
    let result = super.call(
      "createStoreNFT",
      "createStoreNFT(string,address,address,string):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_perksVault),
        ethereum.Value.fromString(_baseURI)
      ]
    );

    return result[0].toAddress();
  }

  try_createStoreNFT(
    _name: string,
    _owner: Address,
    _perksVault: Address,
    _baseURI: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createStoreNFT",
      "createStoreNFT(string,address,address,string):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_perksVault),
        ethereum.Value.fromString(_baseURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateStoreNFTCall extends ethereum.Call {
  get inputs(): CreateStoreNFTCall__Inputs {
    return new CreateStoreNFTCall__Inputs(this);
  }

  get outputs(): CreateStoreNFTCall__Outputs {
    return new CreateStoreNFTCall__Outputs(this);
  }
}

export class CreateStoreNFTCall__Inputs {
  _call: CreateStoreNFTCall;

  constructor(call: CreateStoreNFTCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _perksVault(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _baseURI(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateStoreNFTCall__Outputs {
  _call: CreateStoreNFTCall;

  constructor(call: CreateStoreNFTCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
